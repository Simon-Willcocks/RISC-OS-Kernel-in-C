/* Copyright 2021 Simon Willcocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


ENTRY( _start )
SECTIONS
{
  minimum_ram = 256 << 20 ; /* Boot configuration. */

  /* Memory map, virtual addresses, see also MMU/... */
  free_pool             = 0xc0000000 ; /* This will hopefully disappear (Wimp Sprites?) */
  va_base               = 0xfc000000 ;
  debug_pipe            = 0xfffe0000 ; /* Needs 4x max block size for pipe */
  shared                = 0xfffe4000 ; /* Make sure it doesn't overlap workspace */
  workspace             = 0xffff0000 ; /* This one can't be moved, it starts with the hardware vectors */
  l1_translation_tables = 0xfff20000 ; /* Something writes near 0xfff00000 */
  l2_translation_tables = 0xfff30000 ; /* L2TT pool */
  tt_limit              = 0xfff70000 ; /* 20KiB/core, +20KiB global, extendible */
  task_slots            = 0xfff70000 ; /* probably needs more space */
  tasks                 = 0xfff80000 ; /* probably needs more space */
  devices               = 0xfff90000 ;
  pipes_base            = 0xc0000000 ;
  pipes_top             = 0xd0000000 ;
  app_memory_base       = 0x00008000 ; /* Must be a page boundary */
  app_memory_limit      = 0x20000000 ; /* Must be a MiB boundary */
  rma_base              = 0x20000000 ;
  rma_heap              = 0x20000000 ;
  frame_buffer          = 0xef000000 ;
  system_heap           = 0x30000000 ; /* To match legacy expectations. Had proposed 0xffe00000 */
  dynamic_areas_base    = 0x31000000 ; /* Where DAs start from. */

  /* Privileged mode stacks. The base has to be on a power-of-two boundary
     which matches the SharedCLibrary code. */
  /* FIXME: clarify the state of the code's use of these. undef, abt, at least
     are only core-specific, not slot-specific, as at May 2023. */
  stack_limit           = 0x00100000 ;
  svc_stack_top         = 0xffdff000 ;
  abt_stack_top         = 0xffcff000 ;
  undef_stack_top       = 0xffbff000 ;
  irq_stack_top         = 0xffaff000 ;
  fiq_stack_top         = 0xff9ff000 ;

 . = va_base ;
 .text : {
  *(.text.init) ;
  . = ALIGN( 1024 ) ; /* Space for GPU to overwrite */
  *(.data) ; /* Pre-MMU data, not writable once kernel started. */
  *(.text) ;
  *(.rodata*) ;
  . = ALIGN( 4096 ) ;
 }

 /DISCARD/ : { *(.*) ; }
} ;

/* Legacy systems have this memory map:

// Kernel/Docs/HAL/Notes has a memory map:

00000000 16K        Kernel workspace
00004000 16K        Scratch space
00008000 Mem-32K    Application memory
0xxxxxxx 3840M-Mem  Dynamic areas
F0000000 160M       I/O space (growing downwards if necessary)
FA000000 1M         HAL workspace
FA100000 8K         IRQ stack
FA200000 32K        SVC stack
FA300000 8K         ABT stack
FA400000 8K         UND stack
FAE00000 1M         Reserved for physical memory accesses
FAF00000 256k       reserved for DCache cleaner address space (eg. StrongARM)
FAF40000 64k        kernel buffers (for long command lines, size defined by KbuffsMaxSize)
FAFE8000 32K        HAL workspace
FAFF0000 32K        "Cursor/System/Sound" block (probably becoming just "System")
FAFF8000 32K        "Nowhere"
FB000000 4M         L2PT
FB400000 16K        L1PT
FB404000 4M-16K     System heap
FB800000 8M         Soft CAM
FC000000 64M        ROM
*/
